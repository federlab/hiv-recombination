from io import StringIO
import pandas as pd
from operator import contains

#This file contains helper functions for parsing the generic slim output

#Essentially, we want to read each section to CSV and read the mutations a dictionary of sets?

def parse_output_section(section):
    """Parses a section of the slim output file starting with the #OUT tag
    ---------------------------------------------------------------------------
    Params
    -----------
    section:    str, the section of the slim output file to parse. Generated by
                reading in the entire slim file and splitting on the #OUT tag. 
                Can contain the genotype list or just the mutation set (either
                fixed or segregating)

    Returns
    -----------
    """
    #First we can get the timepoint from the first line
    time, seg_data = section.split('\n', 1)

    #Isolate the timepoint and convert to an int
    time = int(time.split(' ')[1])

    #Check if there is this section includes genotype info
    contains_genomes = len(seg_data.split('Genomes:')) > 1
    
    #Separate out and process the genotype info if it exists
    if contains_genomes:
        split_results = seg_data.split('Genomes:')[1]
        genome_data = split_results[1]
        seg_data = split_results[0]
    
    #Now we can process the data on segregating sites
    seg_df = pd.read_csv(StringIO(seg_data), sep=' ', skiprows=[0,1], header=None)
    print(seg_df)
    return
    